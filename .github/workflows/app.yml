name: App CI (Build → Push → Sonar)

on:
  push:
    branches: [ main ]
    paths:
      - 'app.py'
      - 'Dockerfile'
      - 'requirements.txt'
      - '.github/workflows/app.yml'
  workflow_dispatch: {}

env:
  IMAGE_NAME: johnmonteir0/linuxtips-giropops-senhas
  IMAGE_TAG: dev-${{ github.sha }}

permissions:
  contents: read
  id-token: write

concurrency:
  group: app-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_push_and_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (optional) better Python indexing for Sonar
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install deps (best-effort)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      # --- SonarQube scan (Community) ---
      # Requires repo secrets:
      #   SONAR_HOST_URL  -> e.g. https://sonarqube.<account>.realhandsonlabs.net
      #   SONAR_TOKEN     -> user token from SonarQube (Admin → Security → Users → Tokens)
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}