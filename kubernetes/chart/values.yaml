# -------- Global ----------
environment: dev        # dev | stg | prod
app:
  image:
    repository: johnmonteir0/linuxtips-giropops-senhas
    tag: dev
    pullPolicy: IfNotPresent

# -------- Deployments (component-specific settings only) ----------
deployments:
  giropops-senhas:
    name: giropops-senhas
    replicas: 3
    labels:
      app: giropops-senhas
    ports:
      - name: app
        port: 5000
        targetPort: 5000
    resources:
      requests: { memory: "128Mi", cpu: "250m" }
      limits:   { memory: "256Mi", cpu: "500m" }
    env:
      - name: OTEL_SERVICE_NAME
        value: "giropops-senhas"
      - name: OTEL_LOG_LEVEL
        value: "info"
      - name: OTEL_TRACES_SAMPLER
        value: "always_on"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "otel-collector-opentelemetry-collector.monitoring:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
      - name: OTEL_EXPORTER_OTLP_INSECURE
        value: "true"

  redis:
    name: redis
    image: "johnmonteir0/chainguard-redis"
    replicas: 1
    labels:
      app: redis
    ports:
      - name: service
        port: 6379
        targetPort: 6379
    resources:
      requests: { memory: "128Mi", cpu: "250m" }
      limits:   { memory: "256Mi", cpu: "500m" }

# -------- Services ----------
services:
  giropops-senhas:
    labels:
      app: giropops-senhas
    serviceType: ClusterIP
    ports:
      - name: app
        port: 5000
        targetPort: 5000

  redis:
    labels:
      app: redis
    serviceType: ClusterIP
    ports:
      - name: service
        port: 6379
        targetPort: 6379

# -------- Monitoring (ServiceMonitor) ----------
monitoring:
  enabled: true
  serviceMonitors:
    - name: giropops-senhas
      labels:
        app: giropops-senhas
      selector:
        matchLabels:
          app: giropops-senhas
      endpoints:
        - port: app
          path: /metrics
          interval: 30s
          scrapeTimeout: 10s
      # Optional: Label Prometheus release
      prometheusRelease: kube-prometheus-stack
